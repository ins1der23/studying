// üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç —Å–∞–º—É—é –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –æ–±—â–µ–≥–æ
// –ø—Ä–µ—Ñ–∏–∫—Å–∞ —Å—Ä–µ–¥–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
// üìå –ï—Å–ª–∏ –æ–±—â–µ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –Ω–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É "".

public class Prefix {

    public static String prefix(String[] str){
        if (str.length == 0) return "";
        String prefix = str[0];
        for (int i = 1; i < str.length; i++){
            while (str[i].indexOf(prefix) != 0) {
                prefix = prefix.substring(0, prefix.length()-1);
                if (prefix.isEmpty()) return "";
            }
        }
        return prefix;
    }

    public static void main(String[] args) {
        String[] strs = { "flower", "flow", "flowing" };
        System.out.println(prefix(strs));
    }
}
    

